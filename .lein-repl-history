str "Over " 9000 "!")
(str "Over " 9000 "!")
(take 20 (cycle ["foo" "bar"]))
(take 20 (cycle ["foo" "bar" "juu"]))
(- 2 (* 78 35))
((* 2 3 ) + 4)
((* 2 3 )+ 4)
((* 2 3 ) + 4)
(( * 2 3 ) + 4)
((* 2 3)+ 4)
(+ 4 (* 2 3))
( + 3 4 5 6) 
+
(get "Clojure" 2)
(get "Clojure" 3)
\j
(get "abrakadabra" 0)
(fn [who] (str "Hello, " who "!"))
((fn [who] (str "Hello, " who "!")) "Jani")
((fn [who, asd] (str "Hello, " who "! " asd " :)")) "Jani", "dude")
(def hello (fn [who] (str "Hello, " who "!")))
(hello "beautiful")
(use 'clojure.repl)
(doc hello)
(use 'training-day)
hai
answer
square
square 4
square
(square 4)
(square 2)
(square 4)
hai
answer
(use 'training-day)
answer
(square 2)
(use 'training-day)
(square 2)
(square 3)
(average 3 2)
(use 'training-day)
(average 3 2)
(average 3 2 1)
(average 4 2)
(average 10 1)
(use 'training-day)
(average 10 1)
(use 'training-day)
(average 10 1)
(average 10 3)
(use 'training-day)
(average 10 3)
(square 4)
(average 10 3)
(use 'training-day)
(average 10 3)
(use 'training-day)
(average 10 3)
(use 'training-day)
(average 10 3)
(average 10 5)
(average 3 1)
(use 'training-day)
(use 'training-day')
(use 'training-day)
(average 3 1)
/ 2
/ 2 2
+ 2 2
(+ 2 2)
(+ 1 3)
((+ 1 3) / 2)
(/(+ 1 3)2)
(/(+ 1 10)2)
(/(+ 2 6)2)
(use 'training-day)
(average 3 1)
